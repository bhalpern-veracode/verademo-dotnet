name: DotNet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths:
    - '**.cs'
    - '**.csproj'
  
env:
   DOTNET_VERSION: '4.5.2'
   ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  

jobs:
  build:
    name: build-and-test
    runs-on: windows-latest
    # grants permissions for the artifact to be uploaded
    permissions:
      contents: read
      packages: write
    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can acces it and clones the repo
      - uses: actions/checkout@v3
      # Set up DOT.NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        #with:
        #  dotnet-version: ${{env.DOTNET_VERSION}}
      # Set up MSBuild and add to path  
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
        
   
      
      # Set up NuGet to install NuGet dependencies
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.2
#      - name: Navigate to Workspace
#        run: cd $GITHUB_WORKSPACE

      
      # Restore dependencies to the project
      - name: Install dependencies
        run: dotnet restore
      
      # NuGet call to restore packages
      - name: Restore Packages
        run: nuget restore Verademo-dotnet.sln

# Results in an error not finding the solution files to build off, possibly due to being --no-restore
#      - name: Build
#        run: dotnet build 
#     - name: Test
#       run: dotnet test --no-restore --verbosity normal

         # [DEBUG]: listing directories after MSBUILD
 

      # Build the solution
      - name: Build Solution
        run: |
          msbuild.exe Verademo-dotnet.sln  /nologo /nr:false /p:DeployOnBuild=true /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:DeleteExistingFiles=True /p:SkipInvalidConfigurations=true /p:PackageLocation=./.. /p:DebugSymbols=true  /p:platform="Any CPU" /p:configuration="Debug" 
      

      - name: List files in the repository and zip artifact
        run: |
          dir ${{ github.workspace }}
          mkdir -p ${{ github.workspace }}/artifact
          copy Verademo-dotnet.zip ${{ github.workspace }}/artifact
          dir ${{ github.workspace }}/artifact
      - run: ls
      
       # Upload the artifact of the zip archive
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: VerademoZip
          path: "./Verademo-dotnet.zip" 
      
  security:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Check out main branch
      uses: actions/checkout@v2
      with:
        path: '${{ github.workspace }}/artifact'
    
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3.0.0
      with:
        # Artifact name
        name: VerademoZip # optional
        # Destination path
        path: "./Verademo-dotnet.zip"  # optional
   
    - run: ls
    
    - name: Veracode Upload And Scan
  # You may pin to the exact commit or the version.
  # uses: veracode/veracode-uploadandscan-action@35794dab9fbcd28fac19e44963f80646b27f4a7f
      uses: veracode/veracode-uploadandscan-action@0.2.4
      with:
        # appname
        appname: Verademo-net # default is ${{ github.repository }}
        # createprofile
        createprofile: false # default is true
        # filepath
        filepath: ./Verademo-dotnet.zip
        # version
        version: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }} # default is Scan from Github job: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
        # vid
        vid: ${{ secrets.VERACODE_API_ID }}
        # vkey
        vkey: ${{ secrets.VERACODE_API_KEY }}
        # true or false
        # automatically delete the current scan if there are any errors when uploading files or starting the scan
        deleteincompletescan: true # optional
        # specify version of the Java API Wrapper; default is latest
        #javawrapperversion: # optional
        # show detailed diagnostic information, which you can use for debugging, in the output.
        debug: true # optional


